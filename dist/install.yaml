apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubensync
    control-plane: controller-manager
  name: kubensync-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: managedresources.automation.kubensync.com
spec:
  group: automation.kubensync.com
  names:
    kind: ManagedResource
    listKind: ManagedResourceList
    plural: managedresources
    shortNames:
    - mr
    singular: managedresource
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ManagedResource is the Schema for the managedresources API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ManagedResourceSpec defines the desired state of ManagedResource
            properties:
              avoidResourceUpdate:
                description: AvoidResourceUpdate defines if the created resources
                  should be updated if they already exists. Default value is false.
                type: boolean
              namespaceSelector:
                description: ManagedResourceSpecNamespaceSelector defines the selector
                  used to specify which namespaces are affected
                properties:
                  labelSelector:
                    description: Labels that the namespace must have to be selected
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  regex:
                    description: Regex that the namespace name must match to be selected
                    type: string
                type: object
              template:
                description: ManagedResourceSpecTemplate defines the resources to
                  be created when a namespace matches the selector
                properties:
                  data:
                    description: Data defines a set of refences to secrets or configmaps
                    items:
                      description: |-
                        Describes extra data that will be loaded into the go template as inputs. They all will
                        be inside `.Data` parent and all Secret/ConfigMap keys will be loaded. The format inside the template would look as follows
                        `.Data.${Name}.${Key}`.
                      properties:
                        name:
                          description: Name of the key where the contents will be
                            created.
                          type: string
                        ref:
                          description: Defines the reference to the resource that
                            should be imported.
                          properties:
                            apiVersion:
                              description: ApiVersion of the resource.
                              type: string
                            group:
                              description: Group of the resource.
                              type: string
                            kind:
                              description: Kind of the resource.
                              type: string
                            name:
                              description: Name of the resource.
                              type: string
                            namespace:
                              description: Namespace of the resource
                              type: string
                          type: object
                        type:
                          description: Defines the kind of resource the ref is pointing
                            to. Could be `Secret` or `ConfigMap`.
                          type: string
                      type: object
                    type: array
                  literal:
                    description: Literal defines a go template to be renderized for
                      each namespace matching the selector
                    type: string
                type: object
            type: object
          status:
            description: ManagedResourceStatus defines the observed state of ManagedResource
            properties:
              createdResources:
                items:
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                    triggerNamespace:
                      type: string
                    uid:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubensync
  name: kubensync-controller-manager
  namespace: kubensync-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubensync
  name: kubensync-leader-election-role
  namespace: kubensync-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubensync
  name: kubensync-managedresource-admin-role
rules:
- apiGroups:
  - automation.kubensync.com
  resources:
  - managedresources
  verbs:
  - '*'
- apiGroups:
  - automation.kubensync.com
  resources:
  - managedresources/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubensync
  name: kubensync-managedresource-editor-role
rules:
- apiGroups:
  - automation.kubensync.com
  resources:
  - managedresources
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - automation.kubensync.com
  resources:
  - managedresources/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubensync
  name: kubensync-managedresource-viewer-role
rules:
- apiGroups:
  - automation.kubensync.com
  resources:
  - managedresources
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - automation.kubensync.com
  resources:
  - managedresources/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubensync-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - automation.kubensync.com
  resources:
  - managedresources
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - automation.kubensync.com
  resources:
  - managedresources/finalizers
  verbs:
  - update
- apiGroups:
  - automation.kubensync.com
  resources:
  - managedresources/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubensync-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubensync-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubensync
  name: kubensync-leader-election-rolebinding
  namespace: kubensync-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubensync-leader-election-role
subjects:
- kind: ServiceAccount
  name: kubensync-controller-manager
  namespace: kubensync-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubensync
  name: kubensync-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubensync-manager-role
subjects:
- kind: ServiceAccount
  name: kubensync-controller-manager
  namespace: kubensync-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubensync-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubensync-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: kubensync-controller-manager
  namespace: kubensync-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubensync
    control-plane: controller-manager
  name: kubensync-controller-manager-metrics-service
  namespace: kubensync-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/name: kubensync
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubensync
    control-plane: controller-manager
  name: kubensync-controller-manager
  namespace: kubensync-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubensync
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: kubensync
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
        - /manager
        image: ghcr.io/eryalito/kubensync-operator:0.9.0-rc2
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports: []
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts: []
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubensync-controller-manager
      terminationGracePeriodSeconds: 10
      volumes: []
